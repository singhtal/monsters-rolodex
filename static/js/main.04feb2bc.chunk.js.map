{"version":3,"sources":["components/card/card.js","components/card-list/card-list.js","components/Input/input.js","App.js","reportWebVitals.js","index.js"],"names":["Card","className","alt","src","this","props","monster","id","name","email","Component","Cardlist","monsters","map","item","Input","type","placeholder","onChange","handleChange","App","state","searchField","fetch","then","response","json","users","setState","input","filterMonsters","filter","elem","toLowerCase","includes","event","updateSearch","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAiBeA,G,6KAZP,OACI,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BC,KAAKC,MAAMC,QAAQC,GAA7C,yBACnB,6BACKH,KAAKC,MAAMC,QAAQE,MADfJ,KAAKC,MAAMC,QAAQC,IAG5B,4BAAIH,KAAKC,MAAMC,QAAQG,e,GARpBC,cCeJC,G,6KAZP,OACI,qBAAKV,UAAU,YAAf,SAEQG,KAAKC,MAAMO,SAASC,KAAI,SAACC,GACrB,OAAO,cAAC,EAAD,CAAMR,QAASQ,GAAWA,EAAKP,a,GANvCG,cCSRK,G,6KARP,OACI,uBAAOd,UAAU,SAASe,KAAK,SAC/BC,YAAab,KAAKC,MAAMY,YACxBC,SAAUd,KAAKC,MAAMc,mB,GALbT,cCkCLU,G,wDA/Bb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXT,SAAU,GACVU,YAAa,IAJH,E,gEAQO,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAChB,SAAUe,S,mCAE7BE,GACXzB,KAAKwB,SAAS,CAACN,YAAaO,M,+BAEpB,IAAD,SACuBzB,KAAKiB,MAA9BT,EADE,EACFA,SAASU,EADP,EACOA,YACVQ,EAAiBlB,EAASmB,QAAO,SAASC,GAC1C,OAAQA,EAAKxB,KAAKyB,cAAeC,SAASZ,EAAYW,kBAE1D,OACE,sBAAKhC,UAAU,MAAf,UACA,iDACM,cAAC,EAAD,CAAOgB,YAAY,kBAAkBE,aAAc,SAAAgB,GAAK,OAAI,EAAKC,aAAaD,EAAME,OAAOC,UAC3F,cAAC,EAAD,CAAU1B,SAAUkB,W,GA1BdpB,cCOH6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.04feb2bc.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './card.css';\r\n\r\nclass Card extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"card-container\">\r\n            <img alt=\"monsters\" src={`https://robohash.org/${this.props.monster.id}?set=2&size=180x180`} />\r\n                <h2 key={this.props.monster.id}>\r\n                    {this.props.monster.name}\r\n                </h2>\r\n                <p>{this.props.monster.email}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React, {Component} from 'react';\r\nimport Card from '../card/card';\r\nimport './card-list.css';\r\n\r\nclass Cardlist extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"card-list\">\r\n                {\r\n                    this.props.monsters.map((item) => {\r\n                        return <Card monster={item} key={item.id}></Card>;\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cardlist;","import React, {Component} from 'react';\r\nimport './input.css';\r\n\r\nclass Input extends Component {\r\n    render() {\r\n        return (\r\n            <input className=\"search\" type=\"search\" \r\n            placeholder={this.props.placeholder} \r\n            onChange={this.props.handleChange} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input;","import React, {Component} from 'react';\nimport Cardlist from './components/card-list/card-list';\nimport Input from './components/Input/input';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}))\n  }\n  updateSearch(input) {\n    this.setState({searchField: input});\n  }\n  render() {\n    let {monsters,searchField}  = this.state;\n    var filterMonsters = monsters.filter(function(elem){\n        return (elem.name.toLowerCase()).includes(searchField.toLowerCase());\n    })\n    return (\n      <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n            <Input placeholder=\"Search Monsters\" handleChange={event => this.updateSearch(event.target.value)} />\n            <Cardlist monsters={filterMonsters} />\n      </div>\n    );    \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}